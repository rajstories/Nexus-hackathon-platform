name: Deploy to Azure App Service

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  NODE_VERSION: '20.x'
  RESOURCE_GROUP: hackerspace-rg

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Run type checking
      run: npm run type-check --if-present
    
    - name: Run tests
      run: npm test -- --passWithNoTests
      env:
        CI: true
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: production-files
        path: |
          dist/
          server/
          shared/
          package.json
          package-lock.json
          tsconfig.json
          vite.config.ts

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: production-files
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Install production dependencies
      run: npm ci --production
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
    
    - name: Verify deployment
      run: |
        sleep 30
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/health)
        if [ $response -eq 200 ]; then
          echo "Deployment successful!"
        else
          echo "Deployment verification failed with status code: $response"
          exit 1
        fi

  database-migration:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run database migrations
      run: npm run db:push --force
      env:
        DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
        PGHOST: ${{ secrets.PGHOST }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
        PGUSER: ${{ secrets.PGUSER }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGPORT: ${{ secrets.PGPORT }}